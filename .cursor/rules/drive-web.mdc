---
description: 
globs: 
alwaysApply: true
---
- 한글만 사용 한다.

프로젝트 코드 작성 
- 클래스
    - 클래스 내부의 속성은 private 으로 작성한다.
    - 클래스 내부의 메서드는 접근제한자를 반드시 붙인다.
    - 오버라이드 된 메서드는 override 키워드를 반드시 붙인다.
    - 상속을 사용하는 경우에는 하위 타입에서 상위 타입의 속성에 직접 접근할 수 없다.
    - Getter와 Setter는 기본적으로 만들지 않는다. 
    - 정적 속성은 클래스 최상단에 선언 한다.
    - 정적 메서드는 생성자 상단에 선언 한다.
    - 모든 속성은 변경될 여지가 없다면 기본적으로 readonly 키워드를 붙인다.
    - 인스턴스 속성은 static method 하위에 생성자 상단에 선언 한다.
    - 인스턴스 메서드는 생성자 하단에 순차적으로 선언 한다.
    - 추상 메서드는 생성자 하단에 순차적으로 위치 한다.
    - 클래스 선언은 파일 단위로 하며, 상단에는 클래스를 선언하고 파일 최하단에 export default 클래스명으로 작성 한다.

- 컴포넌트
    - 리엑트 컴포넌트는 파일명 뒤에 View를 붙인다.
        - ex) AView.tsx
    - 컴포넌트 선언은 상단에, export default는 파일 하단에 작성 한다.
    - 리엑트 컴포넌트에 주입할 Props 인터페이스의 이름은 interface Props {} 로 선언 한다.
    - 리엑트 컴포넌트를 선언할 때에는 펑셔널 컴포넌트로만 작성 한다.
    - 컴포넌트 내부의 선언 순서는 일반 변수와 상수, hooks(useRef, useState)로 인한 선언, 함수 순으로 작성 한다.
    - 선언부와 실행부의 코드는 1줄 개행 후 작성 한다.
    - 함수와 함수의 선언 사이에는 1줄 개행 후 작성 한다.
    - hooks(useEffect, useMemo, useCallback)의 단독 실행은 선언 이후에 사용 한다.
        - // 선언부
        - const a = 3;
        - const ref = useRef();
        - const [a, setA] = useState();
        - const handleClick = () => {}
        - // 1줄 개행
        - const handleDoubleClick = () => {}
        - // 실행부 - 1줄 개행
        - useEffect(() => {});

- GIT
    - COMMIT
        - 현재 워크스페이스 안에 선택된 프로젝트의 브렌치명을 확인 한다.
        - issue/이슈번호, feature/이슈번호, refactor/이슈번호, fix/이슈번호...등의 형식에서 "이슈번호" 추출
        - 이슈번호로 mcp-atlassian 사용해서 이슈 제목 조회
        - 커밋 메시지는 [이슈번호] 앞에 붙이고 MCP에서 이슈번호로 조회한 제목을 작성
        - 변경사항은 제목을 작성한 후 다음 라인에 이어서 "-" 를 사용해서 작성
        - 각 변경사항은 개별 라인에 "-"로 시작하여 연속적으로 작성한다.
        - 변경사항들 사이에는 빈 줄을 추가하지 않는다.
         - ex)
            - 현재 브렌치명: fix/NDRIVESUS-1234
            - MCP로 조회한 티켓 제목: 조회된 티켓 제목
            - 커밋 메시지 예시: `[NDRIVESUS-1234] 조회된 티켓 제목
                 - 수정한 내용1
                 - 수정한 내용2 
                 - 수정한 내용3...`
    - PUSH
      - 커밋이 완료되면 현재 브렌치의 내용을 리모트 브렌치로 푸쉬 한다.
      - 현재 브렌치에서 커밋이 여러개인 경우, 로컬에서 커밋 내용은 하나로 리베이스하고 리모트 브렌치로 포스 푸쉬 한다.
    - PULL REQUEST
      - GIT 로그를 확인하여, 현재 브렌치가 파생되어진 부모 브렌치를 정확하게 추적한다.
      - ex) 
         - develop -> NDRIVESUS-12345 -> NDRIVESUS-23456 순서로 생성되었고 현재 브렌치가 NDRIVESUS-23456 이라면, NDRIVESUS-12345로 PR을 생성 한다.
      - 현재 브렌치를 파생된 부모 브렌치로 PR을 생성 한다.
      - 생성된 PR 링크를 브라우저로 자동으로 연다.
    - `깃에 올려`라는 명령어가 입력
      - 커밋, 푸쉬, 풀 리퀘스트 생성을 순차적으로 수행한다. 
      - 커밋 메시지를 생성할 때 까지 사용자의 승인 없이 모든 명령을 수행 한다.
      - 커밋 메시지를 사용자가 승인하면, PR 생성까지 사용자의 승인 없이 모든 명령을 수행 한다.
